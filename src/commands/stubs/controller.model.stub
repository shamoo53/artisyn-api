import { Request, Response } from "express";
import BaseController from "src/controllers/BaseController";

import { PrismaClient } from "@prisma/client";
import Resource from 'src/resources/index';

const prisma = new PrismaClient();

/**
 * {{ControllerName}}
 */
export default class extends BaseController {
    /**
     * Get all resource from the database
     * 
     * @param req 
     * @param res 
     */
    index = async (req: Request, res: Response) => {

        Resource(req, res, {
            data: await prisma.{{ModelName}}.findMany(
                { orderBy: { id: 'asc' } }
            ),
        })
            .json()
            .status(200)
            .additional({
                status: 'success',
                message: 'OK',
                code: 200,
            });
    }

    /**
     * Get a specific resource from the database
     * 
     * @param req 
     * @param res 
     */
    show = async (req: Request, res: Response) => {

        Resource(req, res, {
            data: await prisma.{{ModelName}}.findFirst(
                { where: { id: req.params.id } }
            ),
        })
            .json()
            .status(200)
            .additional({
                status: 'success',
                message: 'OK',
                code: 200,
            });
    }

    /**
     * Create a new resource in the database
     * 
     * The calling route must recieve a multer.RequestHandler instance
     * 
     * @example router.post('/{{ModelName}}s', upload.none(), new AdminController().create);
     * 
     * @param req 
     * @param res 
     */
    create = async (req: Request, res: Response) => {

        const data = await prisma.{{ModelName}}.create({
            data: req.body,
        })

        Resource(req, res, {
            data: data,
        })
            .json()
            .status(201)
            .additional({
                status: 'success',
                message: 'New {{ModelName}} created successfully',
                code: 201,
            });
    }

    /**
     * Update a specific resource in the database
     * 
     * @param req 
     * @param res 
     */
    update = async (req: Request, res: Response) => {
        const data = await prisma.{{ModelName}}.update({
            where: { id: req.params.id },
            data: req.body(),
        })

        Resource(req, res, {
            data,
        })
            .json()
            .status(202)
            .additional({
                status: 'success',
                message: '{{ModelName}} updated successfully',
                code: 202,
            });
    }

    /**
     * Delete a specific resource from the database
     * 
     * @param req 
     * @param res 
     */
    delete = async (req: Request, res: Response) => {
        await prisma.{{ModelName}}.delete(
            { where: { id: req.params.id } }
        )

        Resource(req, res, {
            data: {},
        })
            .json()
            .status(202)
            .additional({
                status: 'success',
                message: '{{ModelName}} deleted successfully',
                code: 202,
            });
    }
}
